{"version":3,"sources":["Componentes/list.js","index.js"],"names":["List","useState","requiredCamp","setRequiredCamp","usuarios","setUsuarios","showModal","setShowModal","usuarioSelecionado","setUsuarioSelecionado","cartaoSelecionado","setCartaoSelecionado","valorTransacao","setValorTransacao","showModalResult","setShowModalResult","confirmacaoPagamento","setConfirmacaoPagamento","card_number","cvv","expiry_date","cartao","useEffect","axios","get","then","resp","data","console","log","class","style","display","onClick","name","className","thousandSeparator","value","onChange","e","target","prefix","inputmode","placeholder","event","substr","map","u","index","src","img","id","username","mostrarModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44e1eefa.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport axios from 'axios'\nimport NumberFormat from 'react-number-format';\nimport \"./list.css\"\n\n\nexport default function List() {\n\n    const [requiredCamp, setRequiredCamp] = useState(\"none\"); // Constante para validação de campo\n    let [usuarios, setUsuarios] = useState([])  /* colocar array vazia como valor inicial para poder listar depois   */\n    let [showModal, setShowModal] = useState(false)\n    let [usuarioSelecionado, setUsuarioSelecionado] = useState({}) // usar {} pois o conteúdo está em json\n    let [cartaoSelecionado, setCartaoSelecionado] = useState()\n    let [valorTransacao, setValorTransacao] = useState()\n    let [showModalResult, setShowModalResult] = useState(false)\n    let [confirmacaoPagamento, setConfirmacaoPagamento] = useState()\n\n    let [cartao] = useState([\n        // valid card\n        {\n          card_number: '1111111111111111',\n          cvv: 789,\n          expiry_date: '01/18',\n        },\n        // invalid card\n        {\n          card_number: '4111111111111234',\n          cvv: 123,\n          expiry_date: '01/20',\n        },\n    ]) \n    \n\n    useEffect(() => {\n        // a url http://cors.bridged.cc/ serve para evitar erros de cors utilizando axios\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\n\n        }).then((resp) => {\n            setUsuarios(resp.data)\n            console.log(usuarios)\n        })\n\n    }, [])\n\n    let mostrarModal = (u) => {\n        console.log(u);\n        setUsuarioSelecionado(u);\n\n        setShowModal(true);\n    }\n    \n    let fecharModal = () => {\n\n        setShowModal(false);\n    }\n\n     // Função para filtrar o valor do dinheiro\n    function inputChange(e){\n        setValorTransacao(e.target.value);\n        setRequiredCamp(\"none\");\n    }\n\n    // Função para detectar modificação e resgatar valor no selection\n    function handleChange(event){\n        setCartaoSelecionado(event.target.value);\n    }\n\n     // Abrir o modal de recibo de pagamento\n     function modalPagamento (){\n         console.log(\"cartão \" + cartaoSelecionado)\n        if (cartaoSelecionado === cartao[0].card_number/*  || \"Cartão com o final 1111\" */){\n            setShowModal(false);\n            \n            setShowModalResult(true);\n            setConfirmacaoPagamento(\"\");\n        } else if (cartaoSelecionado === cartao[1].card_number/*  || \"Cartão com o final 1234\" */){\n            setShowModal(false);\n\n            setShowModalResult(true);\n            setConfirmacaoPagamento(\"não\");\n        }\n        \n    }\n\n    function fecharModalPagamento (){\n\n        setShowModalResult(false)\n    }\n    \n\n    return(\n        <>\n        <div>\n            <div class=\"backdrop\" style={{display: (showModal ? \"block\" : \"none\")}} onClick={() => setShowModal(false)}></div>\n                <div class=\"modal\" style={{display: (showModal ? \"block\" : \"none\")}}>\n                    <div class=\"headerModal\">\n                        <div class=\"identificacaoModal\">\n                            <span class=\"tituloModal\">Pagamento para </span>    \n                            <span class=\"usuarioModal\">{usuarioSelecionado.name} </span>\n                        </div>\n                        <div class=\"fechaModal\" onClick={fecharModal}>X</div>\n                    </div>   \n                    <div class=\"bodyModal\">\n                        <div className=\"input-money\">\n                            <NumberFormat thousandSeparator={true} value={valorTransacao} onChange={inputChange} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\" class=\"valor\"/>\n                            <p style={{display:requiredCamp}}>Campo obrigatório</p>\n                         </div>\n                         {/* <select  placeholder=\"Selecione o cartao\" value={setCartaoSelecionado}  onChange={handleChange}>\n                            {cartao.map(\n                                cartao => (\n                                    <option value={setCartaoSelecionado} key={cartao.id}>\n                                        Cartão com o final {cartao.card_number.substr(-4)}\n                                    </option>\n                                )\n                            )}\n                        </select> */}\n                        <select onChange={handleChange} class=\"cartoes\">\n                            <option value=\"Selecione o cartao\">Selecione o cartao</option>\n                            <option value={cartao[0].card_number}>Cartão com final {cartao[0].card_number.substr(-4)}</option>\n                            <option value={cartao[1].card_number}>Cartão com final {cartao[1].card_number.substr(-4)}</option>\n\n                        </select>\n                        <button class=\"botaoPagarModal\" onClick={() => {modalPagamento()}}>Pagar</button>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"listaUsuario\">\n                {usuarios.map((u, index)=>{\n                    return( \n                        <div class=\"campoUsuario\">\n                        <div class=\"informacoesUsuario\" key={\"nome\"+index}>\n                        <img class=\"imagem\" src={u.img}></img>\n                        <ul>\n                            <li class=\"name\">{u.name}</li>\n                            <li class=\"id\">ID: {u.id} - Username: {u.username}</li>\n                        </ul>\n                        </div>\n                            <button onClick={(e) => mostrarModal (u) } class=\"botaoPagar\">Pagar</button>\n                        </div>\n                    )\n                })}\n            </div>\n            <div class=\"backdrop\" style={{display: (showModalResult ? \"block\" : \"none\")}} onClick={() => setShowModalResult(false)}></div>\n            <div class=\"modalPagamento\" style={{display: (showModalResult ? \"block\" : \"none\")}} onClick={() => setShowModalResult(false)}>\n                <div class=\"headerModalPagamento\">\n                    <span class=\"reciboPagamento\">Recibo de pagamento</span>\n                    <div class=\"fechaModalPagamento\" onClick={fecharModalPagamento}>X</div>\n                </div>\n                <div class=\"mensagemRecibo\">\n                    <span>O pagamento <b class=\"resultRecibo\">{confirmacaoPagamento}</b> foi concluido com sucesso</span>\n                </div>\n            </div>\n        \n        </>\n    )\n    \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport List from './Componentes/list';\n\nReactDOM.render(\n  <React.StrictMode>\n    <List/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}